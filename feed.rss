<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Amine Bensalah</title><description>Personal website</description><link>https://aminebensalah.com</link><language>en</language><lastBuildDate>Thu, 4 Mar 2021 14:35:04 +0000</lastBuildDate><pubDate>Thu, 4 Mar 2021 14:35:04 +0000</pubDate><ttl>250</ttl><atom:link href="https://aminebensalah.com/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://aminebensalah.com/tips/docker-context</guid><title>Setting up a Docker context</title><description>Docker context how to use-it to avoid `docker-machine` on Mac scilicone.</description><link>https://aminebensalah.com/tips/docker-context</link><pubDate>Thu, 24 Dec 2020 17:20:00 +0000</pubDate><content:encoded><![CDATA[<h1>Setting up a Docker context</h1><h2>Introduction</h2><p>For using <code>Docker</code> on Mac m1, i tried to find many startegies to continue using my backend-enviroenemnt like previously with a Mac x86_64.</p><p>First i tried to build <code>docker-machine</code>, <code>docker</code>, <code>docker-compose</code> with <code>brew install --rebuild</code> but unsuccessfully.</p><p>Then i tried to create a vm or use my old machine with ubuntu server with <code>docker</code> installed, but i will not put all my backend-end app on the vm because this app is under developpement, so here i replaced just my <code>docker-machine</code> with my <code>virtual-box</code>.</p><p>Still i need to have <code>docker</code> and <code>docker-compose</code> installed on my Mac m1.</p><p>In this case i used this <a href="https://docs.docker.com/engine/install/binaries/">step</a> to install docker from scratch and about docker-compose you can use this <a href="https://github.com/docker/compose#using-pip">step</a> using pip3 instead of pip make sure you have a python3 installed on your Mac silicone.</p><h2>Docker Context</h2><p>The remaining steps are simple. We create a Docker context:</p><pre><code>docker context create my-vm --docker <span class="string">"host=ssh://ubuntu@192.168.1.37"</span>
</code></pre><p>And tell Docker to use it</p><pre><code>docker context use my-vm
</code></pre><p>Now all docker commands are targeting the virtual or physical machine, just like they do in Docker for Mac.</p><p>You can try it using:</p><pre><code>docker ps
</code></pre><p>you will see sometings like that</p><pre><code><span class="type">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span>
</code></pre><p>You can find out more about docker context in the <a href="https://docs.docker.com/engine/context/working-with-contexts/">online documentation</a></p>]]></content:encoded></item></channel></rss>